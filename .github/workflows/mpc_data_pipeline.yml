name: Daily Minor Planet Center (MPC) Data Pipeline

on:
  schedule:
    - cron: "0 0 * * *"  # 00:00 UTC daily
  workflow_dispatch:

env:
  PROJECT_ID: exoatlas
  INSTANCE_CONNECTION_NAME: exoatlas:us-central1:exoatlas-db

jobs:
  fetch-and-store-data:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: 'read'
      id-token: 'write' # Required for Workload Identity Federation

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/566178654810/locations/global/workloadIdentityPools/github-pool/providers/exoatlas'
          service_account: 'exoatlas-github-mpc-worker@exoatlas.iam.gserviceaccount.com'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests psycopg2-binary google-cloud-storage pandas

      - name: Download and Start Cloud SQL Auth Proxy
        run: |
          # Use a specific version to avoid 404s due to 'latest' alias changes
          # IMPORTANT: Replace 'vX.Y.Z' with the actual latest stable version from GitHub releases
          # Check https://github.com/GoogleCloudPlatform/cloud-sql-proxy/releases for the latest
          PROXY_VERSION="v2.18.1" # Example: update this to the current stable version
          wget https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/${PROXY_VERSION}/cloud-sql-proxy.linux.amd64 -O cloud-sql-proxy
          chmod +x cloud-sql-proxy
          # Start the Cloud SQL Auth Proxy in the background
          # Removed --private-ip to connect via public IP
          ./cloud-sql-proxy --port 5432 ${{ env.INSTANCE_CONNECTION_NAME }} &
          # Wait for the proxy to start
          sleep 5

      - name: Test DB connection
        run: |
          sudo apt-get update -y && sudo apt-get install -y postgresql-client
          PGPASSWORD=${{ secrets.DB_PASSWORD }} \
          psql "host=127.0.0.1 port=5432 user=postgres dbname=exoatlas-data sslmode=require" -c "select now();"

      - name: Run Data Fetcher
        env:
          DB_USER: 'postgres'
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: 'exoatlas-data'
          GCS_BUCKET_NAME: 'exoatlas-db-bucket'
        run: |
          if [ -f "backend/datapipe/mpc_data_fetcher.py" ]; then
            echo "Successfully found script. Fetching and storing data..."
            python -u backend/datapipe/mpc_data_fetcher.py
          else
            echo "Error: backend/datapipe/mpc_data_fetcher.py not found."
            exit 1
          fi
